apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
spec:
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      containers:
      - name: vault
        image: vault:1.8.3
        command: ['vault','server','-config=/vault/config']
        ports:
        - name: vault
          containerPort: 8200
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
        env:
        - name: VAULT_ADDR
          value: http://127.0.0.1:8200
        - name: UNSEAL1
          valueFrom:
            secretKeyRef:
              name: vault-keys
              key: UNSEAL1
        - name: UNSEAL2
          valueFrom:
            secretKeyRef:
              name: vault-keys
              key: UNSEAL2
        - name: UNSEAL3
          valueFrom:
            secretKeyRef:
              name: vault-keys
              key: UNSEAL3
        volumeMounts:
#        - name: defaultconf
#          mountPath: /etc/nginx/conf.d/default.conf
        - name: vaultconf
          mountPath: /vault/config/vault.hcl
          subPath: vault.hcl
        - name: vault-data
          mountPath: "/vault/data"
        lifecycle:
          postStart:
            exec:
              command:
              - sh
              - -c
              - vault status; rc=$?; if [ ${rc} -eq 2 ]; then vault operator unseal $UNSEAL1 ; vault operator unseal $UNSEAL2 ; vault operator unseal $UNSEAL3; fi
      volumes:
#      - name: defaultconf
#        configMap:
#          name: defaultconf
      - name: vaultconf
        configMap:
          name: vaultconf
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-vol01


