#!/bin/bash

echo "burnup skadmin:"

mkdir -p /home/rocky/tapisrc1-primary-data/skadmin

# TODO
# check if skadmin is already done
#if true 
#then
#  echo "skadmin done. Exiting burnup."
#  exit 0
#fi

if [ "$( docker container inspect -f '{{.State.Running}}' vault )" != "true" ]
then 
  echo "Vault container, which is required by skadmin, is not running. Exiting."
  exit 1
fi

# check if skadmin is already done
if [ -f /home/rocky/tapisrc1-primary-data/skadmin/env ]
then
  if [ -s /home/rocky/tapisrc1-primary-data/skadmin/env ]
  then
    echo "/home/rocky/tapisrc1-primary-data/skadmin/env is populated, so we assume skadmin is done. Skipping the rest of skadmin burnup."
    exit 0
  fi
fi

# mv skadmin env file out of the way if it is empty 
if [ -f /home/rocky/tapisrc1-primary-data/skadmin/env ]
then
  if [ $(wc -l < "/home/rocky/tapisrc1-primary-data/skadmin/env") -lt 2 ]
  then
    echo "WARN: /home/rocky/tapisrc1-primary-data/skadmin/env is present but empty. Moving it out of the way."
    mv /home/rocky/tapisrc1-primary-data/skadmin/env /home/rocky/tapisrc1-primary-data/skadmin/env.bak 
  fi
fi


export VAULT_TOKEN=`cat /home/rocky/tapisrc1-primary-data/vault/vault-token`
export SKEXPORT_PARMS="-vtok $VAULT_TOKEN -vurl http://vault:8200 -noskip"

# create vault roles and policies
docker run --name skadmin-presetup -it --rm --net tapis --env VAULT_TOKEN --env SKEXPORT_PARMS \
-v ./create-sk-roles:/tmp/create-sk-roles \
-v ./tapis-vault/policies/sk:/tmp/sk-policies \
-v ./tapis-vault/policies/sk-admin:/tmp/sk-admin-policies \
-v ./tapis-vault/roles:/tmp/sk-roles \
tapis/ubutil:1.6.1 /tmp/create-sk-roles

export VAULT_SECRETID=`docker run --name skadmin-presetup -it --rm --net tapis --env VAULT_TOKEN \
tapis/ubutil:1.6.1 curl -s -X POST -H "X-Vault-Token: $VAULT_TOKEN" http://vault:8200/v1/auth/approle/role/sk/secret-id | jq -r .data.secret_id`

export VAULT_ROLEID=`docker run --name skadmin-presetup -it --rm --net tapis --env VAULT_TOKEN \
tapis/ubutil:1.6.1 curl -s -X GET -H "X-Vault-Token: $VAULT_TOKEN" http://vault:8200/v1/auth/approle/role/sk/role-id | jq -r .data.role_id`

if [ -z "$VAULT_SECRETID" ]
then
  echo "\$VAULT_SECRETID is empty. Exiting."
  exit 1
fi

if [ -z "$VAULT_ROLEID" ]
then
  echo "\$VAULT_ROLEID is empty. Exiting."
  exit 1
fi

# create tapis passwords in vault
docker run --name skadmin-init -it --rm --net tapis --env VAULT_ROLEID --env VAULT_SECRETID \
-v ./initialLoad:/tmp/initialLoad \
-v ./run-sk-admin:/tmp/run-sk-admin \
tapis/securityadmin:1.6.2 /tmp/run-sk-admin

# export tapis passwords to env file
docker run --name skadmin-export -it --rm --net tapis --env SKEXPORT_PARMS tapis/securityexport:1.6.2 > /home/rocky/tapisrc1-primary-data/skadmin/env

